-- Drop the PETSALE table in case it exists
drop table PETSALE;
-- Create the PETSALE table 
create table PETSALE (
	ID INTEGER PRIMARY KEY NOT NULL,
	ANIMAL VARCHAR(20),
	QUANTITY INTEGER,
	SALEPRICE DECIMAL(6,2),
	SALEDATE DATE
	);
-- Insert saple data into PETSALE table
insert into PETSALE values 
	(1,'Cat',9,450.09,'2018-05-29'),
	(2,'Dog',3,666.66,'2018-06-01'),
	(3,'Dog',1,100.00,'2018-06-04'),
	(4,'Parrot',2,50.00,'2018-06-04'),
	(5,'Dog',1,75.75,'2018-06-10'),
	(6,'Hamster',6,60.60,'2018-06-11'),
	(7,'Cat',1,44.44,'2018-06-11'),
	(8,'Goldfish',24,48.48,'2018-06-14'),
	(9,'Dog',2,222.22,'2018-06-15')
	
;
SELECT * FROM PETSALE;

-- BUILD IN FUNCTION AGGREGATE-SCALAR-STRING  - DATE & TIME
--AGGREGATE FUNCTIONS : SUM(), MIN(),MAX(),AVG()...
--sum
SELECT ANIMAL, SUM(SALEPRICE) as TOTAL_SALES from PETSALE GROUP BY ANIMAL;
--min/max
SELECT MIN(SALEPRICE) FROM PETSALE WHERE ANIMAL='Dog';
--average
--moyenne des ventes réalisées (une vente peut contenir plusieurs annimaux)
SELECT AVG(SALEPRICE) FROM PETSALE ;
--à combien un chien est vendu en moyenne 
SELECT AVG(SALEPRICE/QUANTITY) AS AVG_SALING_PRICE FROM PETSALE WHERE ANIMAL='Dog';

--SCALAR FUNCTIONS - perform operations on every input value 
--round 
SELECT ROUND(SALEPRICE,2) FROM PETSALE; 
SELECT SALEPRICE, ROUND(SALEPRICE,1) AS ARRRONDIS_DIXIEME,ROUND(SALEPRICE,-1) AS ARRONDIS_DIZAINE FROM PETSALE;

--STRING FUNCTIONS 
--lenght 
SELECT ANIMAL, LENGTH(ANIMAL)AS TAILLE_MOT_ANIMAL FROM PETSALE GROUP BY ANIMAL;
--upper 
SELECT UCASE(ANIMAL) FROM PETSALE;
SELECT DISTINCT(UCASE(ANIMAL)) FROM PETSALE;
--lower 
SELECT LCASE(ANIMAL) FROM PETSALE;
SELECT * FROM PETSALE WHERE LCASE(ANIMAL)='cat';

--DATE & TIME FUNCTIONS 
-- extract the day, month, day of month, day of week, day of year, week, hour, minute, and second. 
--DAY()
SELECT *, DAY(SALEDATE) AS DAYOFSALE FROM PETSALE WHERE ANIMAL='Cat';
--MONTH()
SELECT COUNT(*) as nb_sales_may FROM PETSALE WHERE MONTH(SALEDATE)='05';
--YEAR()
--DAYOFMONTH()
SELECT *, DAYOFMONTH(SALEDATE) AS DAYOFMONTHSALES FROM PETSALE WHERE ANIMAL='Cat';
--DAYOFWEEK()
SELECT *, DAYOFWEEK(SALEDATE) AS DAYOFWEEKSALES FROM PETSALE WHERE ANIMAL='Cat';
--DAYOFYEAR()
SELECT *, DAYOFYEAR(SALEDATE) AS DAYOFWyearSALES FROM PETSALE WHERE ANIMAL='Cat';
--WEEK()
SELECT *, WEEK(SALEDATE) AS weekSALES FROM PETSALE WHERE ANIMAL='Cat';
--HOUR()
--MINUTE()
--SECOND()
--CURRENT_DATE
SELECT *, (CURRENT_DATE-SALEDATE) AS DAY_SINCE_SALE FROM PETSALE WHERE ANIMAL='Cat';
-- le resultat est affiché en années mois et jours soit 1 an 9 mois et 12 jours
--CURRENT TIME
